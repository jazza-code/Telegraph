@inject SignInManager<UserData> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="IdentityNavBtn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @ViewData["ActivePage"]
    </button>
    <div id="IdentityNav" class="dropdown-menu dropdown-menu-right" aria-labelledby="IdentityNavBtn">
        <a class="dropdown-item @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">الملف الشخصي</a>
        <a class="dropdown-item @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">البريد الإلكتروني</a>
        <a class="dropdown-item @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">كلمة المرور</a>
        @if (hasExternalLogins)
        {
            <a id="external-login" class="dropdown-item @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">تسجيلات الدخول الخارجية</a>
        }
        <a class="dropdown-item @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">مصادقة ثنائية</a>
        <a class="dropdown-item @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">البيانات الشخصية</a>
    </div>
</div>